@0x881300819f1b50e9; # unique file ID, generated by `capnp id`

using Common = import "../../common.capnp";
using Protocol = import "../../protocol/protocol.capnp";
using RPC = import "../rpc.capnp";
using Json = Common.Json;

$import "/capnp/c++.capnp".namespace("koinos::rpc::mempool");

using Go = import "/go.capnp";
$Go.package("mempool");
$Go.import("github.com/koinos/koinos-proto-golang/koinos/rpc/mempool");

struct MempoolReservedRequest {}

struct CheckPendingAccountResourcesRequest {
   payer             @0 :Data $Json.hex;
   maxPayerResources @1 :UInt64;
   trxResourceLimit  @2 :UInt64;
}

struct GetPendingTransactionsRequest {
   limit @0 :UInt64;
}

struct MempoolRPCRequest {
   union {
      mempoolReserved              @0 :MempoolReservedRequest;
      checkPendingAccountResources @1 :CheckPendingAccountResourcesRequest;
      getPendingTransactions       @2 :GetPendingTransactionsRequest;
   }
}

struct MempoolReservedResponse {}

using MempoolErrorResponse = RPC.ErrorResponse;

struct CheckPendingAccountResourcesResponse {
   success @0 :Bool;
}

struct GetPendingTransctionsResponse {
   transactions @0 :List(Protocol.Transaction);
}

struct MempoolRPCResponse {
   union {
      mempoolReserved              @0 :MempoolReservedResponse;
      mempoolError                 @1 :MempoolErrorResponse;
      checkPendingAccountResources @2 :CheckPendingAccountResourcesResponse;
      getPendingTransactions       @3 :GetPendingTransctionsResponse;
   }
}
