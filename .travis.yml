language: generic

os: linux

dist: jammy

addons:
  apt:
    update: true
    packages:
      - protobuf-compiler

stages:
  - name: after_success
    if: type != pull_request

jobs:
  include:
    - name: "C++"
      env:
        - TARGET_REPO=koinos-proto-cpp
      install:
        - sudo apt install protobuf-compiler-grpc
      script:
        - mkdir build
        - protoc --experimental_allow_proto3_optional --cpp_out=build --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` --grpc_out=build `find koinos -name '*.proto'` `find google -name '*.proto'` `find openapiv3 -name '*.proto'`
      after_success:
        - git clone https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git
        - cd ${TRAVIS_BUILD_DIR}/
        - mkdir src include
        - rsync -rvm --include "*.pb.cc" --include "*./" --delete ${TRAVIS_BUILD_DIR}/build/cpp/ ./src/
        - rsync -rvm --include "*.pb.h"  --include "*./" --delete ${TRAVIS_BUILD_DIR}/build/cpp/ ./include/
        - git add src include
        - |
          if ! git diff --cached --quiet --exit-code; then
            if [ "${TRAVIS_BRACH}" != "master" ]; then
              git checkout -b ${TRAVIS_BRANCH}
            fi
            git commit -m "Update for koinos-proto commit ${COMMIT_HASH}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_BRANCH}
          fi
        - |
          if ! [ -z "${TRAVIS_TAG}" ]; then
            git tag -a ${TRAVIS_TAG} -m "proto tag ${TRAVIS_TAG}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_TAG}
          fi

    - name: "Embedded  C++"
      env:
        - TARGET_REPO=koinos-proto-embedded-cpp
        - PB_EMBEDDED_CPP_VERSION=negative-enums
      install:
        - git clone --recursive https://github.com/koinos/EmbeddedProto
        - pushd EmbeddedProto
        - git checkout $PB_EMBEDDED_CPP_VERSION
        - ./setup.sh
        - popd
      script:
        - mkdir build
        - pushd EmbeddedProto
        - protoc --experimental_allow_proto3_optional --plugin=protoc-gen-eams --eams_out=../build -I.. `find ../koinos -type d -name rpc -prune -o -type f -name "*.proto" -print`
        - popd
      after_success:
        - git clone https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git
        - cd ${TRAVIS_BUILD_DIR}/
        - mkdir -p libraries/koinos/generated libraries/koinos/src
        - rsync -rvm --include "*.h" --include "*/" --exclude "*" --exclude ".*/" --delete ${TRAVIS_BUILD_DIR}/build/eams/ ./libraries/proto_embedded/generated/
        - rsync -rvm --include "*.h" --include "*.cpp" --include "*/" --exclude "*" --exclude ".*/" --delete ${TRAVIS_BUILD_DIR}/EmbeddedProto/src/ ./libraries/proto_embedded/src/
        - git add libraries/koinos
        - |
          if ! git diff --cached --quiet --exit-code; then
            if [ "${TRAVIS_BRACH}" != "master" ]; then
              git checkout -b ${TRAVIS_BRANCH}
            fi
            git commit -m "Update for koinos-proto commit ${COMMIT_HASH}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_BRANCH}
          fi
        - |
          if ! [ -z "${TRAVIS_TAG}" ]; then
            git tag -a ${TRAVIS_TAG} -m "proto tag ${TRAVIS_TAG}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_TAG}
          fi

    - name: "Golang"
      env:
        - PROTOC_GEN_GO_VERSION=1.30.0
        - PROTOC_GEN_GO_GRPC_VERSION=1.3.0
      install:
        - go install google.golang.org/protobuf/cmd/protoc-gen-go@$PROTOC_GEN_GO_VERSION
        - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$PROTOC_GEN_GO_GRPC_VERSION
      script:
        - mkdir build
        - protoc --experimental_allow_proto3_optional --go_out=build/go/ --plugin=protoc-gen-go-rpc=`go env GOPATH`/bin/protoc-gen-go-rpc --go-grpc_out=build/go
      after_success:
        - git clone https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git
        - cd ${TRAVIS_BUILD_DIR}/
        - mkdir koinos
        - rsync -rvm --include "*.pb.go" --include "*/" --exclude "*" --exclude ".*/" --delete ${TRAVIS_BUILD_DIR}/build/github.com/koinos/koinos-proto-golang/ ./
        - go mod tidy
        - git add koinos
        - |
          if ! git diff --cached --quiet --exit-code; then
            if [ "${TRAVIS_BRANCH}" != "master" ]; then
              git checkout -b ${TRAVIS_BRANCH}
            fi

            git commit -m "Update for koinos-proto commit ${COMMIT_HASH}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_BRANCH}
          fi
        - |
          if ! [ -z "${TRAVIS_TAG}" ]; then
            git tag -a ${TRAVIS_TAG} -m "proto tag ${TRAVIS_TAG}"
            git push --force https://${GITHUB_USER_TOKEN}@github.com/koinos/${TARGET_REPO}.git ${TRAVIS_TAG}
          fi

    - name: "Assembly Script"
      env:
        - AS_PROTO_VERSION="1.0.1"

    - name: "Java Script"

    - name: "Python"

    - name: "Protobuf Descriptors"

    - name: "Documentation"

before_install:
  - git config --global user.email ${GITHUB_USER_EMAIL}
  - git config --global user.name  ${GITHUB_USER_NAME}

notifications:
  slack:
    secure: KUBygLJ3P9z9dYvoWr3Kg+82b5Oq7/gtHmwlv3D+kbzQPJzN/CtwRH9fpJCfa1jjr375tSAb9nbOVqerOHH448aQ50x436Co68Ic2GwQLpfiGjC7apALs2hSxM68nR2+tOPgBk6OCb4rm4G/mnO/2BQqNkGHpk5QoBf5Mv61njyflc5aR5LmlujA2t/5KkXw90te+WDJlwwA08psyhyLjFr/KH7LwDRVc4ggOwDPPPzjwQlABQFyO4avE43SjtSCScMx56y7PdPeIZcvLUo/+lJsCGovS7MTCQ+FPpnHMzYa4QZA7RXTsfys9ZI/SYmrhPdgkBxWOjQCUsO93t8jhikh384li2VqTDTvz0fGh+Cw9LkM80fA+nvaoLAHiUGgI325GmWDnqbEdP9eeFKtRM5U/gTZyEMpDmx/qGr1zmbus31FA+YHPSHsaUYZnzWaCRHOXP7ORm0eiWbczs7jNM0L722EcrocACpZTYFQgy91xr3BAgXOohbN5y+4Uix/BdS4wIHaxNh2N4zzW8v40q0G8lV1Dd2CJKUSbJ27Ze1ziYSQLo4gV9qRULuxiGDdtvlp9Btlz4Rc7NlOrl+oJpl0A0HJFUkalgM5PehmvlPkjJCwdeiCXQdiTe5tO9vPYqifwF+l1kcwIDxc4FBFMbVj2K5C1MAOH+ZjxBNSt1A=
    on_success: never
